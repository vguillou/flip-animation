{"version":3,"file":"flip.cjs.js","sources":["../src/flip.js"],"sourcesContent":["class Utils {\n  static snakeToCamel(str) {\n    return str.replace(/(-\\w)/g, (match) => match[1].toUpperCase());\n  }\n\n  static nextFrame(fn) {\n    // Twice because of firefox\n    requestAnimationFrame(() => requestAnimationFrame(fn));\n  }\n}\n\nclass ElementHelper {\n  constructor(element) {\n    this.element = element;\n  }\n\n  cleanTransition() {\n    this.element.style.transition = '';\n  }\n\n  setStyle(styleProp, value) {\n    this.element.style[Utils.snakeToCamel(styleProp)] = value;\n  }\n\n  static getStyle(element, styleProp) {\n    return window.getComputedStyle(element).getPropertyValue(styleProp);\n  }\n\n  static getStyles(element, styleProps) {\n    return styleProps.map((prop) => this.getStyle(element, prop));\n  }\n\n  static measure(element, otherPropsToFlip) {\n    return {\n      rect: element.getBoundingClientRect(),\n      opacity: ElementHelper.getStyle(element, 'opacity'),\n      others: ElementHelper.getStyles(element, otherPropsToFlip),\n    };\n  }\n\n  static getTransition(properties, transitionDuration, transitionTimingFunction) {\n    return properties\n      .map((prop) => `${prop} ${transitionDuration} ${transitionTimingFunction}`)\n      .join(',');\n  }\n}\n\nclass Flipper {\n  constructor(element, toClass, otherPropsToFlip) {\n    this.element = element;\n    this.helper = new ElementHelper(element);\n    this.toClass = toClass;\n    this.otherPropsToFlip = otherPropsToFlip ? [].concat(otherPropsToFlip) : [];\n  }\n\n  firstLastInvert() {\n    // first\n    const first = ElementHelper.measure(this.element, this.otherPropsToFlip);\n\n    this.element.classList.add(this.toClass);\n\n    // last\n    const last = ElementHelper.measure(this.element, this.otherPropsToFlip);\n\n    // invert\n    this.invert = this.invert(first, last, this.otherPropsToFlip);\n  }\n\n  play(transitionDuration, transitionTimingFunction) {\n    // Switch on animations.\n    const transitionProps = ['transform'];\n    if (this.invert.hasOpacityChanged) transitionProps.push('opacity');\n    Flipper.forEachPropThatChanged(this.otherPropsToFlip, this.invert, (prop) =>\n      transitionProps.push(prop),\n    );\n\n    this.element.style.transition = ElementHelper.getTransition(\n      transitionProps,\n      transitionDuration,\n      transitionTimingFunction,\n    );\n\n    // Remove transform and opacity to trigger the transition towards the css class\n    this.element.style.transform = '';\n    if (this.invert.hasOpacityChanged) this.element.style.opacity = '';\n    Flipper.forEachPropThatChanged(this.otherPropsToFlip, this.invert, (prop) =>\n      this.helper.setStyle(prop, ''),\n    );\n  }\n\n  cleanTransition() {\n    this.helper.cleanTransition();\n  }\n\n  invert(first, last, otherPropsToFlip) {\n    const invert = {\n      translateX: (first.rect.left + first.rect.right) / 2 - (last.rect.left + last.rect.right) / 2,\n      translateY: (first.rect.top + first.rect.bottom) / 2 - (last.rect.top + last.rect.bottom) / 2,\n      scaleX: first.rect.width / last.rect.width,\n      scaleY: first.rect.height / last.rect.height,\n      hasOpacityChanged: first.opacity !== last.opacity,\n      opacity: first.opacity,\n      hasOtherPropsToFlipChanged: first.others.map(\n        (firstOther, index) => firstOther !== last.others[index],\n      ),\n      otherPropsToFlip: first.others,\n    };\n\n    // Invert\n    this.element.style.transform = `translate(${invert.translateX}px,${\n      invert.translateY\n    }px) scale(${invert.scaleX},${invert.scaleY})`;\n    if (invert.hasOpacityChanged) this.element.style.opacity = invert.opacity;\n    Flipper.forEachPropThatChanged(otherPropsToFlip, invert, (prop, index) =>\n      this.helper.setStyle(this.element, prop, invert.otherPropsToFlip[index]),\n    );\n\n    // return info about what has changed\n    return invert;\n  }\n\n  static forEachPropThatChanged(props, invert, actionFn) {\n    props.forEach((p, index) => {\n      if (invert.hasOtherPropsToFlipChanged[index]) actionFn(p, index);\n    });\n  }\n\n  static transitionEndCallback(flipper, resolve) {\n    return () => {\n      flipper.element.removeEventListener('transitionend', Flipper.transitionEndCallback);\n      flipper.cleanTransition();\n      if (resolve) resolve();\n    };\n  }\n}\n\nclass Flip {\n  constructor() {\n    this.flippers = [];\n    this.withTransition();\n  }\n\n  /**\n   * Set the properties of the transition\n   * @param {String} duration as set in CSS (default is '375ms')\n   * @param {String} timingFunction as set in CSS (default is 'cubic-bezier(0.4, 0.0, 0.2, 1)')\n   * @returns the instance of Flip\n   */\n  withTransition(duration = '375ms', timingFunction = 'cubic-bezier(0.4, 0.0, 0.2, 1)') {\n    this.transitionDuration = duration || this.transitionDuration;\n    this.transitionTimingFunction = timingFunction || this.transitionTimingFunction;\n    return this;\n  }\n\n  /**\n   * Set the element that will transition, and the CSS to which it will transition to.\n   * @param {HTMLElement} element that will transition\n   * @param {String}} toClass CSS class to which the element will transition to\n   * @param {Array or String} otherPropsToFlip Optionnaly, the additionnal CSS properties\n   * that should transition (other than 'opacity' and 'transform', in snake case)\n   * @returns the instance of Flip\n   * @throws {Error} if either 'element' or 'toClass' in not defined\n   */\n  withClass(element, toClass, otherPropsToFlip = []) {\n    if (!element) throw new Error('element should be defined');\n    if (!toClass) throw new Error('toClass should be defined');\n    this.flippers.push(new Flipper(element, toClass, otherPropsToFlip));\n    return this;\n  }\n\n  /**\n   * Triggers the transition.\n   * @returns A Promise that resolves after the transition ended.\n   */\n  go() {\n    return new Promise((resolve) => {\n      // fli\n      this.flippers.forEach((flipper) => flipper.firstLastInvert());\n      // p\n      Utils.nextFrame(() => {\n        this.flippers.forEach((flipper, index) => {\n          flipper.element.addEventListener(\n            'transitionend',\n            Flipper.transitionEndCallback(flipper, !index ? resolve : undefined),\n          );\n          flipper.play(this.transitionDuration, this.transitionTimingFunction);\n        });\n      });\n      if (!this.flippers.length) resolve();\n    });\n  }\n}\n\nexport default Flip;\n"],"names":["Utils","snakeToCamel","str","replace","match","toUpperCase","nextFrame","fn","requestAnimationFrame","ElementHelper","element","style","transition","styleProp","value","getStyle","window","getComputedStyle","getPropertyValue","getStyles","styleProps","map","prop","measure","otherPropsToFlip","getBoundingClientRect","getTransition","properties","transitionDuration","transitionTimingFunction","join","Flipper","toClass","helper","concat","first","classList","add","last","invert","transitionProps","hasOpacityChanged","push","forEachPropThatChanged","transform","opacity","setStyle","cleanTransition","rect","left","right","top","bottom","width","height","others","firstOther","index","translateX","translateY","scaleX","scaleY","props","actionFn","forEach","p","hasOtherPropsToFlipChanged","transitionEndCallback","flipper","resolve","removeEventListener","Flip","flippers","withTransition","duration","timingFunction","Error","Promise","firstLastInvert","addEventListener","undefined","play","length"],"mappings":"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"}