{"version":3,"file":"flip.cjs.js","sources":["../src/flip.js"],"sourcesContent":["class Utils {\n  static snakeToCamel(str) {\n    return str.replace(/(-\\w)/g, (match) => match[1].toUpperCase());\n  }\n\n  static nextFrame(fn) {\n    // Twice because of firefox\n    requestAnimationFrame(() => requestAnimationFrame(fn));\n  }\n}\n\nclass ElementHelper {\n  constructor(element) {\n    this.element = element;\n  }\n\n  getStyle(styleProp) {\n    return window.getComputedStyle(this.element).getPropertyValue(styleProp);\n  }\n\n  getStyles(styleProps) {\n    return styleProps.map((prop) => this.getStyle(this.element, prop));\n  }\n\n  setStyle(styleProp, value) {\n    this.element.style[Utils.snakeToCamel(styleProp)] = value;\n  }\n\n  addClass(clazz) {\n    this.element.classList.add(clazz);\n  }\n\n  addEventListener(eventName, cb) {\n    this.element.addEventListener(eventName, cb);\n  }\n\n  removeEventListener(eventName, cb) {\n    this.element.removeEventListener(eventName, cb);\n  }\n\n  measure(otherPropsToFlip) {\n    return {\n      rect: this.element.getBoundingClientRect(),\n      opacity: this.getStyle('opacity'),\n      others: this.getStyles(otherPropsToFlip),\n    };\n  }\n\n  static getTransition(properties, transitionDuration, transitionTimingFunction) {\n    return properties\n      .map((prop) => `${prop} ${transitionDuration} ${transitionTimingFunction}`)\n      .join(',');\n  }\n\n  static getTransform(translateX, translateY, scaleX, scaleY) {\n    const transforms = [];\n    if (translateX || translateY) transforms.push(`translate(${translateX}px,${translateY}px)`);\n    if (scaleX !== 1 || scaleY !== 1) transforms.push(`scale(${scaleX},${scaleY})`);\n    return transforms.join(' ');\n  }\n}\n\nclass Flipper {\n  constructor(element, toClass, otherPropsToFlip) {\n    this.helper = new ElementHelper(element);\n    this.toClass = toClass;\n    this.otherPropsToFlip = otherPropsToFlip ? [].concat(otherPropsToFlip) : [];\n  }\n\n  firstLastInvert() {\n    // first\n    const first = this.helper.measure(this.otherPropsToFlip);\n\n    this.helper.addClass(this.toClass);\n\n    // last\n    const last = this.helper.measure(this.otherPropsToFlip);\n\n    // invert\n    this.inverted = this.invert(first, last, this.otherPropsToFlip);\n  }\n\n  play(transitionDuration, transitionTimingFunction) {\n    return new Promise((resolve) => {\n      // For starters, lets check if we actually have anything to transition\n      const transitionProps = [];\n      if (this.inverted.hasTransformChanged) transitionProps.push('transform');\n      if (this.inverted.hasOpacityChanged) transitionProps.push('opacity');\n      Flipper.forEachPropThatChanged(this.otherPropsToFlip, this.inverted, (prop) =>\n        transitionProps.push(prop),\n      );\n      if (!transitionProps.length) {\n        resolve();\n        return;\n      }\n\n      // Set the transition property to enable...well...the transition\n      this.helper.setStyle(\n        'transition',\n        ElementHelper.getTransition(transitionProps, transitionDuration, transitionTimingFunction),\n      );\n\n      // Prepare cleanup and resolve after the transition\n      const transitionEndCallback = () => {\n        this.helper.removeEventListener('transitionend', transitionEndCallback);\n        this.helper.setStyle('transition', '');\n        resolve();\n      };\n      this.helper.addEventListener('transitionend', transitionEndCallback);\n\n      // Remove transform and opacity to trigger the transition towards the css class\n      if (this.inverted.hasTransformChanged) this.helper.setStyle('transform', '');\n      if (this.inverted.hasOpacityChanged) this.helper.setStyle('opacity', '');\n      Flipper.forEachPropThatChanged(this.otherPropsToFlip, this.inverted, (prop) =>\n        this.helper.setStyle(prop, ''),\n      );\n    });\n  }\n\n  invert(first, last, otherPropsToFlip) {\n    // Calculate\n    const inverted = {\n      translateX:\n        (first.rect.left + first.rect.right) / ((2 - (last.rect.left + last.rect.right)) / 2),\n      translateY:\n        (first.rect.top + first.rect.bottom) / ((2 - (last.rect.top + last.rect.bottom)) / 2),\n      scaleX: first.rect.width / last.rect.width,\n      scaleY: first.rect.height / last.rect.height,\n      hasOpacityChanged: first.opacity !== last.opacity,\n      opacity: first.opacity,\n      hasOtherPropsToFlipChanged: first.others.map(\n        (firstOther, index) => firstOther !== last.others[index],\n      ),\n      otherPropsToFlip: first.others,\n    };\n    inverted.transform = ElementHelper.getTransform(\n      inverted.translateX,\n      inverted.translateY,\n      inverted.scaleX,\n      inverted.scaleY,\n    );\n    inverted.hasTransformChanged = !!inverted.transform;\n\n    // Invert\n    if (inverted.hasTransformChanged) this.helper.setStyle('transform', inverted.transform);\n    if (inverted.hasOpacityChanged) this.helper.setStyle('opacity', inverted.opacity);\n    Flipper.forEachPropThatChanged(otherPropsToFlip, inverted, (prop, index) =>\n      this.helper.setStyle(prop, inverted.otherPropsToFlip[index]),\n    );\n\n    // return info about what has changed\n    return inverted;\n  }\n\n  static equals(first, second) {\n    return first.helper.element === second.helper.element && first.toClass === second.toClass;\n  }\n\n  static forEachPropThatChanged(props, inverted, actionFn) {\n    props.forEach((p, index) => {\n      if (inverted.hasOtherPropsToFlipChanged[index]) actionFn(p, index);\n    });\n  }\n}\n\nclass Flip {\n  constructor() {\n    this.reset();\n  }\n\n  /**\n   * Set the properties of the transition\n   * @param {String} duration as set in CSS (default is '375ms')\n   * @param {String} timingFunction as set in CSS (default is 'cubic-bezier(0.4, 0.0, 0.2, 1)')\n   * @returns the instance of Flip\n   */\n  withTransition(duration = '375ms', timingFunction = 'cubic-bezier(0.4, 0.0, 0.2, 1)') {\n    this.transitionDuration = duration || this.transitionDuration;\n    this.transitionTimingFunction = timingFunction || this.transitionTimingFunction;\n    return this;\n  }\n\n  /**\n   * Set the element that will transition, and the CSS to which it will transition to.\n   * @param {HTMLElement or Array} elements that will transition\n   * @param {String}} toClass CSS class to which the element will transition to\n   * @param {String or Array} otherPropsToFlip Optionnaly, the additionnal CSS properties\n   * that should transition (other than 'opacity' and 'transform', in snake case)\n   * @returns the instance of Flip\n   * @throws {Error} if either 'element' or 'toClass' in not defined\n   */\n  withClass(elements, toClass, otherPropsToFlip = []) {\n    if (!elements) throw new Error('elements should be defined');\n    if (!toClass) throw new Error('toClass should be defined');\n    if (this.ongoing) console.warn('withClass(): transition already ongoing');\n    const elementArray = [].concat(elements);\n    let newFlipper;\n    elementArray.forEach((element) => {\n      newFlipper = new Flipper(element, toClass, otherPropsToFlip);\n      if (!this.flippers.some((currentFlipper) => Flipper.equals(currentFlipper, newFlipper))) {\n        this.flippers.push(newFlipper);\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Triggers the transition.\n   * @returns A Promise that resolves after the transition ended.\n   */\n  go() {\n    return new Promise((resolve) => {\n      this.ongoing = true;\n      // fli\n      this.flippers.forEach((flipper) => flipper.firstLastInvert());\n      // p\n      Utils.nextFrame(() => {\n        const transitionPromises = this.flippers.map((flipper) =>\n          flipper.play(this.transitionDuration, this.transitionTimingFunction),\n        );\n        Promise.all(transitionPromises).then(() => {\n          this.ongoing = false;\n          this.reset();\n          resolve();\n        });\n      });\n    });\n  }\n\n  /**\n   * Reset everything (elements to transition, as well as transition settings).\n   * @returns the instance of Flip\n   */\n  reset() {\n    if (this.ongoing) console.warn('reset(): transition still ongoing');\n    this.flippers = [];\n    this.withTransition();\n    return this;\n  }\n}\n\nexport default Flip;\n"],"names":["Utils","snakeToCamel","str","replace","match","toUpperCase","nextFrame","fn","requestAnimationFrame","ElementHelper","element","styleProp","window","getComputedStyle","getPropertyValue","styleProps","map","prop","getStyle","value","style","clazz","classList","add","eventName","cb","addEventListener","removeEventListener","otherPropsToFlip","getBoundingClientRect","getStyles","getTransition","properties","transitionDuration","transitionTimingFunction","join","getTransform","translateX","translateY","scaleX","scaleY","transforms","push","Flipper","toClass","helper","concat","first","measure","addClass","last","inverted","invert","Promise","resolve","transitionProps","hasTransformChanged","hasOpacityChanged","forEachPropThatChanged","length","setStyle","transitionEndCallback","rect","left","right","top","bottom","width","height","opacity","others","firstOther","index","transform","equals","second","props","actionFn","forEach","p","hasOtherPropsToFlipChanged","Flip","reset","duration","timingFunction","elements","Error","ongoing","console","warn","elementArray","newFlipper","flippers","some","currentFlipper","flipper","firstLastInvert","transitionPromises","play","all","then","withTransition"],"mappings":"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"}