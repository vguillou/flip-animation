var Flip=function(){"use strict";class t{static snakeToCamel(t){return t.replace(/(-\w)/g,t=>t[1].toUpperCase())}static nextFrame(t){requestAnimationFrame(()=>requestAnimationFrame(t))}}class e{constructor(t){this.element=t}cleanTransition(){this.element.style.transition=""}setStyle(e,i){this.element.style[t.snakeToCamel(e)]=i}static getStyle(t,e){return window.getComputedStyle(t).getPropertyValue(e)}static getStyles(t,e){return e.map(e=>this.getStyle(t,e))}static measure(t,i){return{rect:t.getBoundingClientRect(),opacity:e.getStyle(t,"opacity"),others:e.getStyles(t,i)}}static getTransition(t,e,i){return t.map(t=>`${t} ${e} ${i}`).join(",")}}class i{constructor(t,i,s){this.element=t,this.helper=new e(t),this.toClass=i,this.otherPropsToFlip=s?[].concat(s):[]}firstLastInvert(){const t=e.measure(this.element,this.otherPropsToFlip);this.element.classList.add(this.toClass);const i=e.measure(this.element,this.otherPropsToFlip);this.invert=this.invert(t,i,this.otherPropsToFlip)}play(t,s){const r=["transform"];this.invert.hasOpacityChanged&&r.push("opacity"),i.forEachPropThatChanged(this.otherPropsToFlip,this.invert,t=>r.push(t)),this.element.style.transition=e.getTransition(r,t,s),this.element.style.transform="",this.invert.hasOpacityChanged&&(this.element.style.opacity=""),i.forEachPropThatChanged(this.otherPropsToFlip,this.invert,t=>this.helper.setStyle(t,""))}cleanTransition(){this.helper.cleanTransition()}invert(t,e,s){const r={translateX:(t.rect.left+t.rect.right)/2-(e.rect.left+e.rect.right)/2,translateY:(t.rect.top+t.rect.bottom)/2-(e.rect.top+e.rect.bottom)/2,scaleX:t.rect.width/e.rect.width,scaleY:t.rect.height/e.rect.height,hasOpacityChanged:t.opacity!==e.opacity,opacity:t.opacity,hasOtherPropsToFlipChanged:t.others.map((t,i)=>t!==e.others[i]),otherPropsToFlip:t.others};return this.element.style.transform=`translate(${r.translateX}px,${r.translateY}px) scale(${r.scaleX},${r.scaleY})`,r.hasOpacityChanged&&(this.element.style.opacity=r.opacity),i.forEachPropThatChanged(s,r,(t,e)=>this.helper.setStyle(this.element,t,r.otherPropsToFlip[e])),r}static forEachPropThatChanged(t,e,i){t.forEach((t,s)=>{e.hasOtherPropsToFlipChanged[s]&&i(t,s)})}static transitionEndCallback(t,e){return()=>{t.element.removeEventListener("transitionend",i.transitionEndCallback),t.cleanTransition(),e&&e()}}}return class{constructor(){this.flippers=[],this.withTransition()}withTransition(t="375ms",e="cubic-bezier(0.4, 0.0, 0.2, 1)"){return this.transitionDuration=t||this.transitionDuration,this.transitionTimingFunction=e||this.transitionTimingFunction,this}withClass(t,e,s=[]){if(!t)throw new Error("element should be defined");if(!e)throw new Error("toClass should be defined");return this.flippers.push(new i(t,e,s)),this}go(){return new Promise(e=>{this.flippers.forEach(t=>t.firstLastInvert()),t.nextFrame(()=>{this.flippers.forEach((t,s)=>{t.element.addEventListener("transitionend",i.transitionEndCallback(t,s?void 0:e)),t.play(this.transitionDuration,this.transitionTimingFunction)})}),this.flippers.length||e()})}}}();
