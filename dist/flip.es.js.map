{"version":3,"file":"flip.es.js","sources":["../src/flip.js"],"sourcesContent":["class Utils {\n  static snakeToCamel(str) {\n    return str.replace(/(-\\w)/g, (match) => match[1].toUpperCase());\n  }\n\n  static nextFrame(fn) {\n    // Twice because of firefox\n    requestAnimationFrame(() => requestAnimationFrame(fn));\n  }\n}\n\nclass ElementHelper {\n  constructor(element) {\n    this.element = element;\n  }\n\n  cleanTransition() {\n    this.element.style.transition = '';\n  }\n\n  setStyle(styleProp, value) {\n    this.element.style[Utils.snakeToCamel(styleProp)] = value;\n  }\n\n  static getStyle(element, styleProp) {\n    return window.getComputedStyle(element).getPropertyValue(styleProp);\n  }\n\n  static getStyles(element, styleProps) {\n    return styleProps.map((prop) => this.getStyle(element, prop));\n  }\n\n  static measure(element, otherPropsToFlip) {\n    return {\n      rect: element.getBoundingClientRect(),\n      opacity: ElementHelper.getStyle(element, 'opacity'),\n      others: ElementHelper.getStyles(element, otherPropsToFlip),\n    };\n  }\n\n  static getTransition(properties, transitionDuration, transitionTimingFunction) {\n    return properties\n      .map((prop) => `${prop} ${transitionDuration} ${transitionTimingFunction}`)\n      .join(',');\n  }\n}\n\nclass Flipper {\n  constructor(element, toClass, otherPropsToFlip) {\n    this.element = element;\n    this.helper = new ElementHelper(element);\n    this.toClass = toClass;\n    this.otherPropsToFlip = otherPropsToFlip ? [].concat(otherPropsToFlip) : [];\n  }\n\n  firstLastInvert() {\n    // first\n    const first = ElementHelper.measure(this.element, this.otherPropsToFlip);\n\n    this.element.classList.add(this.toClass);\n\n    // last\n    const last = ElementHelper.measure(this.element, this.otherPropsToFlip);\n\n    // invert\n    this.invert = this.invert(first, last, this.otherPropsToFlip);\n  }\n\n  play(transitionDuration, transitionTimingFunction) {\n    // Switch on animations.\n    const transitionProps = ['transform'];\n    if (this.invert.hasOpacityChanged) transitionProps.push('opacity');\n    Flipper.forEachPropThatChanged(this.otherPropsToFlip, this.invert, (prop) =>\n      transitionProps.push(prop),\n    );\n\n    this.element.style.transition = ElementHelper.getTransition(\n      transitionProps,\n      transitionDuration,\n      transitionTimingFunction,\n    );\n\n    // Remove transform and opacity to trigger the transition towards the css class\n    this.element.style.transform = '';\n    if (this.invert.hasOpacityChanged) this.element.style.opacity = '';\n    Flipper.forEachPropThatChanged(this.otherPropsToFlip, this.invert, (prop) =>\n      this.helper.setStyle(prop, ''),\n    );\n  }\n\n  cleanTransition() {\n    this.helper.cleanTransition();\n  }\n\n  invert(first, last, otherPropsToFlip) {\n    const invert = {\n      translateX: (first.rect.left + first.rect.right) / 2 - (last.rect.left + last.rect.right) / 2,\n      translateY: (first.rect.top + first.rect.bottom) / 2 - (last.rect.top + last.rect.bottom) / 2,\n      scaleX: first.rect.width / last.rect.width,\n      scaleY: first.rect.height / last.rect.height,\n      hasOpacityChanged: first.opacity !== last.opacity,\n      opacity: first.opacity,\n      hasOtherPropsToFlipChanged: first.others.map(\n        (firstOther, index) => firstOther !== last.others[index],\n      ),\n      otherPropsToFlip: first.others,\n    };\n\n    // Invert\n    this.element.style.transform = `translate(${invert.translateX}px,${\n      invert.translateY\n    }px) scale(${invert.scaleX},${invert.scaleY})`;\n    if (invert.hasOpacityChanged) this.element.style.opacity = invert.opacity;\n    Flipper.forEachPropThatChanged(otherPropsToFlip, invert, (prop, index) =>\n      this.helper.setStyle(this.element, prop, invert.otherPropsToFlip[index]),\n    );\n\n    // return info about what has changed\n    return invert;\n  }\n\n  static forEachPropThatChanged(props, invert, actionFn) {\n    props.forEach((p, index) => {\n      if (invert.hasOtherPropsToFlipChanged[index]) actionFn(p, index);\n    });\n  }\n\n  static transitionEndCallback(flipper, resolve) {\n    return () => {\n      flipper.element.removeEventListener('transitionend', Flipper.transitionEndCallback);\n      flipper.cleanTransition();\n      if (resolve) resolve();\n    };\n  }\n}\n\nclass Flip {\n  constructor() {\n    this.flippers = [];\n    this.withTransition();\n  }\n\n  /**\n   * Set the properties of the transition\n   * @param {String} duration as set in CSS (default is '375ms')\n   * @param {String} timingFunction as set in CSS (default is 'cubic-bezier(0.4, 0.0, 0.2, 1)')\n   * @returns the instance of Flip\n   */\n  withTransition(duration = '375ms', timingFunction = 'cubic-bezier(0.4, 0.0, 0.2, 1)') {\n    this.transitionDuration = duration || this.transitionDuration;\n    this.transitionTimingFunction = timingFunction || this.transitionTimingFunction;\n    return this;\n  }\n\n  /**\n   * Set the element that will transition, and the CSS to which it will transition to.\n   * @param {HTMLElement} element that will transition\n   * @param {String}} toClass CSS class to which the element will transition to\n   * @param {Array or String} otherPropsToFlip Optionnaly, the additionnal CSS properties\n   * that should transition (other than 'opacity' and 'transform', in snake case)\n   * @returns the instance of Flip\n   * @throws {Error} if either 'element' or 'toClass' in not defined\n   */\n  withClass(element, toClass, otherPropsToFlip = []) {\n    if (!element) throw new Error('element should be defined');\n    if (!toClass) throw new Error('toClass should be defined');\n    this.flippers.push(new Flipper(element, toClass, otherPropsToFlip));\n    return this;\n  }\n\n  /**\n   * Triggers the transition.\n   * @returns A Promise that resolves after the transition ended.\n   */\n  go() {\n    return new Promise((resolve) => {\n      // fli\n      this.flippers.forEach((flipper) => flipper.firstLastInvert());\n      // p\n      Utils.nextFrame(() => {\n        this.flippers.forEach((flipper, index) => {\n          flipper.element.addEventListener(\n            'transitionend',\n            Flipper.transitionEndCallback(flipper, !index ? resolve : undefined),\n          );\n          flipper.play(this.transitionDuration, this.transitionTimingFunction);\n        });\n      });\n      if (!this.flippers.length) resolve();\n    });\n  }\n}\n\nexport default Flip;\n"],"names":[],"mappings":"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"}