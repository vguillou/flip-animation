{"version":3,"file":"flip.iife.js","sources":["../src/flip.js"],"sourcesContent":["class Utils {\n  static snakeToCamel(str) {\n    return str.replace(/(-\\w)/g, (match) => match[1].toUpperCase());\n  }\n\n  static nextFrame(fn) {\n    // Twice because of firefox\n    requestAnimationFrame(() => requestAnimationFrame(fn));\n  }\n}\n\nclass ElementHelper {\n  constructor(element) {\n    this.element = element;\n  }\n\n  getStyle(styleProp) {\n    return window.getComputedStyle(this.element).getPropertyValue(styleProp);\n  }\n\n  getStyles(styleProps) {\n    return styleProps.map((prop) => this.getStyle(this.element, prop));\n  }\n\n  setStyle(styleProp, value) {\n    this.element.style[Utils.snakeToCamel(styleProp)] = value;\n  }\n\n  addClass(clazz) {\n    this.element.classList.add(clazz);\n  }\n\n  addEventListener(eventName, cb) {\n    this.element.addEventListener(eventName, cb);\n  }\n\n  removeEventListener(eventName, cb) {\n    this.element.removeEventListener(eventName, cb);\n  }\n\n  measure(otherPropsToFlip) {\n    return {\n      rect: this.element.getBoundingClientRect(),\n      opacity: this.getStyle('opacity'),\n      others: this.getStyles(otherPropsToFlip),\n    };\n  }\n\n  static getTransition(properties, transitionDuration, transitionTimingFunction) {\n    return properties\n      .map((prop) => `${prop} ${transitionDuration} ${transitionTimingFunction}`)\n      .join(',');\n  }\n\n  static getTransform(translateX, translateY, scaleX, scaleY) {\n    const transforms = [];\n    if (translateX || translateY) transforms.push(`translate(${translateX}px,${translateY}px)`);\n    if (scaleX !== 1 || scaleY !== 1) transforms.push(`scale(${scaleX},${scaleY})`);\n    return transforms.join(' ');\n  }\n}\n\nclass Flipper {\n  constructor(element, toClass, otherPropsToFlip) {\n    this.helper = new ElementHelper(element);\n    this.toClass = toClass;\n    this.otherPropsToFlip = otherPropsToFlip ? [].concat(otherPropsToFlip) : [];\n  }\n\n  firstLastInvert() {\n    // first\n    const first = this.helper.measure(this.otherPropsToFlip);\n\n    this.helper.addClass(this.toClass);\n\n    // last\n    const last = this.helper.measure(this.otherPropsToFlip);\n\n    // invert\n    this.inverted = this.invert(first, last, this.otherPropsToFlip);\n  }\n\n  play(transitionDuration, transitionTimingFunction) {\n    return new Promise((resolve) => {\n      // For starters, lets check if we actually have anything to transition\n      const transitionProps = [];\n      if (this.inverted.hasTransformChanged) transitionProps.push('transform');\n      if (this.inverted.hasOpacityChanged) transitionProps.push('opacity');\n      Flipper.forEachPropThatChanged(this.otherPropsToFlip, this.inverted, (prop) =>\n        transitionProps.push(prop),\n      );\n      if (!transitionProps.length) {\n        resolve();\n        return;\n      }\n\n      // Set the transition property to enable...well...the transition\n      this.helper.setStyle(\n        'transition',\n        ElementHelper.getTransition(transitionProps, transitionDuration, transitionTimingFunction),\n      );\n\n      // Prepare cleanup and resolve after the transition\n      const transitionEndCallback = () => {\n        this.helper.removeEventListener('transitionend', transitionEndCallback);\n        this.helper.setStyle('transition', '');\n        resolve();\n      };\n      this.helper.addEventListener('transitionend', transitionEndCallback);\n\n      // Remove transform and opacity to trigger the transition towards the css class\n      if (this.inverted.hasTransformChanged) this.helper.setStyle('transform', '');\n      if (this.inverted.hasOpacityChanged) this.helper.setStyle('opacity', '');\n      Flipper.forEachPropThatChanged(this.otherPropsToFlip, this.inverted, (prop) =>\n        this.helper.setStyle(prop, ''),\n      );\n    });\n  }\n\n  invert(first, last, otherPropsToFlip) {\n    // Calculate\n    const inverted = {\n      translateX:\n        (first.rect.left + first.rect.right) / ((2 - (last.rect.left + last.rect.right)) / 2),\n      translateY:\n        (first.rect.top + first.rect.bottom) / ((2 - (last.rect.top + last.rect.bottom)) / 2),\n      scaleX: first.rect.width / last.rect.width,\n      scaleY: first.rect.height / last.rect.height,\n      hasOpacityChanged: first.opacity !== last.opacity,\n      opacity: first.opacity,\n      hasOtherPropsToFlipChanged: first.others.map(\n        (firstOther, index) => firstOther !== last.others[index],\n      ),\n      otherPropsToFlip: first.others,\n    };\n    inverted.transform = ElementHelper.getTransform(\n      inverted.translateX,\n      inverted.translateY,\n      inverted.scaleX,\n      inverted.scaleY,\n    );\n    inverted.hasTransformChanged = !!inverted.transform;\n\n    // Invert\n    if (inverted.hasTransformChanged) this.helper.setStyle('transform', inverted.transform);\n    if (inverted.hasOpacityChanged) this.helper.setStyle('opacity', inverted.opacity);\n    Flipper.forEachPropThatChanged(otherPropsToFlip, inverted, (prop, index) =>\n      this.helper.setStyle(prop, inverted.otherPropsToFlip[index]),\n    );\n\n    // return info about what has changed\n    return inverted;\n  }\n\n  static equals(first, second) {\n    return first.helper.element === second.helper.element && first.toClass === second.toClass;\n  }\n\n  static forEachPropThatChanged(props, inverted, actionFn) {\n    props.forEach((p, index) => {\n      if (inverted.hasOtherPropsToFlipChanged[index]) actionFn(p, index);\n    });\n  }\n}\n\nclass Flip {\n  constructor() {\n    this.reset();\n  }\n\n  /**\n   * Set the properties of the transition\n   * @param {String} duration as set in CSS (default is '375ms')\n   * @param {String} timingFunction as set in CSS (default is 'cubic-bezier(0.4, 0.0, 0.2, 1)')\n   * @returns the instance of Flip\n   */\n  withTransition(duration = '375ms', timingFunction = 'cubic-bezier(0.4, 0.0, 0.2, 1)') {\n    this.transitionDuration = duration || this.transitionDuration;\n    this.transitionTimingFunction = timingFunction || this.transitionTimingFunction;\n    return this;\n  }\n\n  /**\n   * Set the element that will transition, and the CSS to which it will transition to.\n   * @param {HTMLElement or Array} elements that will transition\n   * @param {String}} toClass CSS class to which the element will transition to\n   * @param {String or Array} otherPropsToFlip Optionnaly, the additionnal CSS properties\n   * that should transition (other than 'opacity' and 'transform', in snake case)\n   * @returns the instance of Flip\n   * @throws {Error} if either 'element' or 'toClass' in not defined\n   */\n  withClass(elements, toClass, otherPropsToFlip = []) {\n    if (!elements) throw new Error('elements should be defined');\n    if (!toClass) throw new Error('toClass should be defined');\n    if (this.ongoing) console.warn('withClass(): transition already ongoing');\n    const elementArray = [].concat(elements);\n    let newFlipper;\n    elementArray.forEach((element) => {\n      newFlipper = new Flipper(element, toClass, otherPropsToFlip);\n      if (!this.flippers.some((currentFlipper) => Flipper.equals(currentFlipper, newFlipper))) {\n        this.flippers.push(newFlipper);\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Triggers the transition.\n   * @returns A Promise that resolves after the transition ended.\n   */\n  go() {\n    return new Promise((resolve) => {\n      this.ongoing = true;\n      // fli\n      this.flippers.forEach((flipper) => flipper.firstLastInvert());\n      // p\n      Utils.nextFrame(() => {\n        const transitionPromises = this.flippers.map((flipper) =>\n          flipper.play(this.transitionDuration, this.transitionTimingFunction),\n        );\n        Promise.all(transitionPromises).then(() => {\n          this.ongoing = false;\n          this.reset();\n          resolve();\n        });\n      });\n    });\n  }\n\n  /**\n   * Reset everything (elements to transition, as well as transition settings).\n   * @returns the instance of Flip\n   */\n  reset() {\n    if (this.ongoing) console.warn('reset(): transition still ongoing');\n    this.flippers = [];\n    this.withTransition();\n    return this;\n  }\n}\n\nexport default Flip;\n"],"names":["Utils","snakeToCamel","str","replace","match","toUpperCase","nextFrame","fn","requestAnimationFrame","ElementHelper","constructor","element","getStyle","styleProp","window","getComputedStyle","getPropertyValue","getStyles","styleProps","map","prop","setStyle","value","style","addClass","clazz","classList","add","addEventListener","eventName","cb","removeEventListener","measure","otherPropsToFlip","rect","getBoundingClientRect","opacity","others","getTransition","properties","transitionDuration","transitionTimingFunction","join","getTransform","translateX","translateY","scaleX","scaleY","transforms","push","Flipper","toClass","helper","concat","firstLastInvert","first","last","inverted","invert","play","Promise","resolve","transitionProps","hasTransformChanged","hasOpacityChanged","forEachPropThatChanged","length","transitionEndCallback","left","right","top","bottom","width","height","hasOtherPropsToFlipChanged","firstOther","index","transform","equals","second","props","actionFn","forEach","p","Flip","reset","withTransition","duration","timingFunction","withClass","elements","Error","ongoing","console","warn","elementArray","newFlipper","flippers","some","currentFlipper","go","flipper","transitionPromises","all","then"],"mappings":"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"}