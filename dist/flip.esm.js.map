{"version":3,"file":"flip.esm.js","sources":["../src/utils.js","../src/element-helper.js","../src/flipper.js","../src/index.js"],"sourcesContent":["export function snakeToCamel(str) {\n  return str.replace(/(-\\w)/g, (match) => match[1].toUpperCase());\n}\n\nexport function nextFrame(fn) {\n  // Twice because of firefox\n  requestAnimationFrame(() => requestAnimationFrame(fn));\n}\n","import { snakeToCamel } from './utils';\n\nexport default class ElementHelper {\n  constructor(element) {\n    this.element = element;\n  }\n\n  getStyle(styleProp) {\n    return window.getComputedStyle(this.element).getPropertyValue(styleProp);\n  }\n\n  getStyles(styleProps) {\n    return styleProps.map((prop) => this.getStyle(this.element, prop));\n  }\n\n  setStyle(styleProp, value) {\n    this.element.style[snakeToCamel(styleProp)] = value;\n  }\n\n  addClass(clazz) {\n    this.element.classList.add(clazz);\n  }\n\n  addEventListener(eventName, cb) {\n    this.element.addEventListener(eventName, cb);\n  }\n\n  removeEventListener(eventName, cb) {\n    this.element.removeEventListener(eventName, cb);\n  }\n\n  measure(otherPropsToFlip) {\n    return {\n      rect: this.element.getBoundingClientRect(),\n      opacity: this.getStyle('opacity'),\n      others: this.getStyles(otherPropsToFlip),\n    };\n  }\n\n  static getTransition(properties, transitionDuration, transitionTimingFunction) {\n    return properties\n      .map((prop) => `${prop} ${transitionDuration} ${transitionTimingFunction}`)\n      .join(',');\n  }\n\n  static getTransform(translateX, translateY, scaleX, scaleY) {\n    const transforms = [];\n    if (translateX || translateY) transforms.push(`translate(${translateX}px,${translateY}px)`);\n    if (scaleX !== 1 || scaleY !== 1) transforms.push(`scale(${scaleX},${scaleY})`);\n    return transforms.join(' ');\n  }\n}\n","import ElementHelper from './element-helper';\n\nexport default class Flipper {\n  constructor(element, toClass, otherPropsToFlip) {\n    this.helper = new ElementHelper(element);\n    this.toClass = toClass;\n    this.otherPropsToFlip = otherPropsToFlip ? [].concat(otherPropsToFlip) : [];\n  }\n\n  firstLastInvert() {\n    // first\n    const first = this.helper.measure(this.otherPropsToFlip);\n\n    this.helper.addClass(this.toClass);\n\n    // last\n    const last = this.helper.measure(this.otherPropsToFlip);\n\n    // invert\n    this.inverted = this.invert(first, last, this.otherPropsToFlip);\n  }\n\n  play(transitionDuration, transitionTimingFunction) {\n    return new Promise((resolve) => {\n      // For starters, lets check if we actually have anything to transition\n      const transitionProps = [];\n      if (this.inverted.hasTransformChanged) transitionProps.push('transform');\n      if (this.inverted.hasOpacityChanged) transitionProps.push('opacity');\n      Flipper.forEachPropThatChanged(this.otherPropsToFlip, this.inverted, (prop) =>\n        transitionProps.push(prop),\n      );\n      if (!transitionProps.length) {\n        resolve();\n        return;\n      }\n\n      // Set the transition property to enable...well...the transition\n      this.helper.setStyle(\n        'transition',\n        ElementHelper.getTransition(transitionProps, transitionDuration, transitionTimingFunction),\n      );\n\n      // Prepare cleanup and resolve after the transition\n      const transitionEndCallback = () => {\n        this.helper.removeEventListener('transitionend', transitionEndCallback);\n        this.helper.setStyle('transition', '');\n        resolve();\n      };\n      this.helper.addEventListener('transitionend', transitionEndCallback);\n\n      // Remove transform and opacity to trigger the transition towards the css class\n      if (this.inverted.hasTransformChanged) this.helper.setStyle('transform', '');\n      if (this.inverted.hasOpacityChanged) this.helper.setStyle('opacity', '');\n      Flipper.forEachPropThatChanged(this.otherPropsToFlip, this.inverted, (prop) =>\n        this.helper.setStyle(prop, ''),\n      );\n    });\n  }\n\n  invert(first, last, otherPropsToFlip) {\n    // Calculate\n    const inverted = {\n      translateX:\n        (first.rect.left + first.rect.right) / ((2 - (last.rect.left + last.rect.right)) / 2),\n      translateY:\n        (first.rect.top + first.rect.bottom) / ((2 - (last.rect.top + last.rect.bottom)) / 2),\n      scaleX: first.rect.width / last.rect.width,\n      scaleY: first.rect.height / last.rect.height,\n      hasOpacityChanged: first.opacity !== last.opacity,\n      opacity: first.opacity,\n      hasOtherPropsToFlipChanged: first.others.map(\n        (firstOther, index) => firstOther !== last.others[index],\n      ),\n      otherPropsToFlip: first.others,\n    };\n    inverted.transform = ElementHelper.getTransform(\n      inverted.translateX,\n      inverted.translateY,\n      inverted.scaleX,\n      inverted.scaleY,\n    );\n    inverted.hasTransformChanged = !!inverted.transform;\n\n    // Invert\n    if (inverted.hasTransformChanged) this.helper.setStyle('transform', inverted.transform);\n    if (inverted.hasOpacityChanged) this.helper.setStyle('opacity', inverted.opacity);\n    Flipper.forEachPropThatChanged(otherPropsToFlip, inverted, (prop, index) =>\n      this.helper.setStyle(prop, inverted.otherPropsToFlip[index]),\n    );\n\n    // return info about what has changed\n    return inverted;\n  }\n\n  static equals(first, second) {\n    return first.helper.element === second.helper.element && first.toClass === second.toClass;\n  }\n\n  static forEachPropThatChanged(props, inverted, actionFn) {\n    props.forEach((p, index) => {\n      if (inverted.hasOtherPropsToFlipChanged[index]) actionFn(p, index);\n    });\n  }\n}\n","import Flipper from './flipper';\nimport { nextFrame } from './utils';\n\nclass Flip {\n  constructor() {\n    this.reset();\n  }\n\n  /**\n   * Set the properties of the transition\n   * @param {String} duration as set in CSS (default is '375ms')\n   * @param {String} timingFunction as set in CSS (default is 'cubic-bezier(0.4, 0.0, 0.2, 1)')\n   * @returns the instance of Flip\n   */\n  withTransition(duration = '375ms', timingFunction = 'cubic-bezier(0.4, 0.0, 0.2, 1)') {\n    this.transitionDuration = duration || this.transitionDuration;\n    this.transitionTimingFunction = timingFunction || this.transitionTimingFunction;\n    return this;\n  }\n\n  /**\n   * Set the element that will transition, and the CSS to which it will transition to.\n   * @param {HTMLElement or Array} elements that will transition\n   * @param {String}} toClass CSS class to which the element will transition to\n   * @param {String or Array} otherPropsToFlip Optionnaly, the additionnal CSS properties\n   * that should transition (other than 'opacity' and 'transform', in snake case)\n   * @returns the instance of Flip\n   * @throws {Error} if either 'element' or 'toClass' in not defined\n   */\n  withClass(elements, toClass, otherPropsToFlip = []) {\n    if (!elements) throw new Error('elements should be defined');\n    if (!toClass) throw new Error('toClass should be defined');\n    if (this.ongoing) console.warn('withClass(): transition already ongoing');\n    const elementArray = [].concat(elements);\n    let newFlipper;\n    elementArray.forEach((element) => {\n      newFlipper = new Flipper(element, toClass, otherPropsToFlip);\n      if (!this.flippers.some((currentFlipper) => Flipper.equals(currentFlipper, newFlipper))) {\n        this.flippers.push(newFlipper);\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Triggers the transition.\n   * @returns A Promise that resolves after the transition ended.\n   */\n  go() {\n    return new Promise((resolve) => {\n      this.ongoing = true;\n      // fli\n      this.flippers.forEach((flipper) => flipper.firstLastInvert());\n      // p\n      nextFrame(() => {\n        const transitionPromises = this.flippers.map((flipper) =>\n          flipper.play(this.transitionDuration, this.transitionTimingFunction),\n        );\n        Promise.all(transitionPromises).then(() => {\n          this.ongoing = false;\n          this.reset();\n          resolve();\n        });\n      });\n    });\n  }\n\n  /**\n   * Reset everything (elements to transition, as well as transition settings).\n   * @returns the instance of Flip\n   */\n  reset() {\n    if (this.ongoing) console.warn('reset(): transition still ongoing');\n    this.flippers = [];\n    this.withTransition();\n    return this;\n  }\n}\n\nexport default Flip;\n"],"names":[],"mappings":"AAAO,SAAS,YAAY,CAAC,GAAG,EAAE;EAChC,OAAO,GAAG,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,KAAK,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;CACjE;;AAED,AAAO,SAAS,SAAS,CAAC,EAAE,EAAE;;EAE5B,qBAAqB,CAAC,MAAM,qBAAqB,CAAC,EAAE,CAAC,CAAC,CAAC;CACxD;;ACLc,MAAM,aAAa,CAAC;EACjC,WAAW,CAAC,OAAO,EAAE;IACnB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;GACxB;;EAED,QAAQ,CAAC,SAAS,EAAE;IAClB,OAAO,MAAM,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;GAC1E;;EAED,SAAS,CAAC,UAAU,EAAE;IACpB,OAAO,UAAU,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC;GACpE;;EAED,QAAQ,CAAC,SAAS,EAAE,KAAK,EAAE;IACzB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,GAAG,KAAK,CAAC;GACrD;;EAED,QAAQ,CAAC,KAAK,EAAE;IACd,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;GACnC;;EAED,gBAAgB,CAAC,SAAS,EAAE,EAAE,EAAE;IAC9B,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;GAC9C;;EAED,mBAAmB,CAAC,SAAS,EAAE,EAAE,EAAE;IACjC,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;GACjD;;EAED,OAAO,CAAC,gBAAgB,EAAE;IACxB,OAAO;MACL,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,qBAAqB,EAAE;MAC1C,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC;MACjC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC;KACzC,CAAC;GACH;;EAED,OAAO,aAAa,CAAC,UAAU,EAAE,kBAAkB,EAAE,wBAAwB,EAAE;IAC7E,OAAO,UAAU;OACd,GAAG,CAAC,CAAC,IAAI,KAAK,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,kBAAkB,CAAC,CAAC,EAAE,wBAAwB,CAAC,CAAC,CAAC;OAC1E,IAAI,CAAC,GAAG,CAAC,CAAC;GACd;;EAED,OAAO,YAAY,CAAC,UAAU,EAAE,UAAU,EAAE,MAAM,EAAE,MAAM,EAAE;IAC1D,MAAM,UAAU,GAAG,EAAE,CAAC;IACtB,IAAI,UAAU,IAAI,UAAU,EAAE,UAAU,CAAC,IAAI,CAAC,CAAC,UAAU,EAAE,UAAU,CAAC,GAAG,EAAE,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;IAC5F,IAAI,MAAM,KAAK,CAAC,IAAI,MAAM,KAAK,CAAC,EAAE,UAAU,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IAChF,OAAO,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;GAC7B;CACF;;ACjDc,MAAM,OAAO,CAAC;EAC3B,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,gBAAgB,EAAE;IAC9C,IAAI,CAAC,MAAM,GAAG,IAAI,aAAa,CAAC,OAAO,CAAC,CAAC;IACzC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACvB,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,GAAG,EAAE,CAAC,MAAM,CAAC,gBAAgB,CAAC,GAAG,EAAE,CAAC;GAC7E;;EAED,eAAe,GAAG;;IAEhB,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;;IAEzD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;;;IAGnC,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;;;IAGxD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;GACjE;;EAED,IAAI,CAAC,kBAAkB,EAAE,wBAAwB,EAAE;IACjD,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,KAAK;;MAE9B,MAAM,eAAe,GAAG,EAAE,CAAC;MAC3B,IAAI,IAAI,CAAC,QAAQ,CAAC,mBAAmB,EAAE,eAAe,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;MACzE,IAAI,IAAI,CAAC,QAAQ,CAAC,iBAAiB,EAAE,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;MACrE,OAAO,CAAC,sBAAsB,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,IAAI;QACxE,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC;OAC3B,CAAC;MACF,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE;QAC3B,OAAO,EAAE,CAAC;QACV,OAAO;OACR;;;MAGD,IAAI,CAAC,MAAM,CAAC,QAAQ;QAClB,YAAY;QACZ,aAAa,CAAC,aAAa,CAAC,eAAe,EAAE,kBAAkB,EAAE,wBAAwB,CAAC;OAC3F,CAAC;;;MAGF,MAAM,qBAAqB,GAAG,MAAM;QAClC,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,eAAe,EAAE,qBAAqB,CAAC,CAAC;QACxE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;QACvC,OAAO,EAAE,CAAC;OACX,CAAC;MACF,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,eAAe,EAAE,qBAAqB,CAAC,CAAC;;;MAGrE,IAAI,IAAI,CAAC,QAAQ,CAAC,mBAAmB,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;MAC7E,IAAI,IAAI,CAAC,QAAQ,CAAC,iBAAiB,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;MACzE,OAAO,CAAC,sBAAsB,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,IAAI;QACxE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,CAAC;OAC/B,CAAC;KACH,CAAC,CAAC;GACJ;;EAED,MAAM,CAAC,KAAK,EAAE,IAAI,EAAE,gBAAgB,EAAE;;IAEpC,MAAM,QAAQ,GAAG;MACf,UAAU;QACR,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;MACvF,UAAU;QACR,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;MACvF,MAAM,EAAE,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK;MAC1C,MAAM,EAAE,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM;MAC5C,iBAAiB,EAAE,KAAK,CAAC,OAAO,KAAK,IAAI,CAAC,OAAO;MACjD,OAAO,EAAE,KAAK,CAAC,OAAO;MACtB,0BAA0B,EAAE,KAAK,CAAC,MAAM,CAAC,GAAG;QAC1C,CAAC,UAAU,EAAE,KAAK,KAAK,UAAU,KAAK,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;OACzD;MACD,gBAAgB,EAAE,KAAK,CAAC,MAAM;KAC/B,CAAC;IACF,QAAQ,CAAC,SAAS,GAAG,aAAa,CAAC,YAAY;MAC7C,QAAQ,CAAC,UAAU;MACnB,QAAQ,CAAC,UAAU;MACnB,QAAQ,CAAC,MAAM;MACf,QAAQ,CAAC,MAAM;KAChB,CAAC;IACF,QAAQ,CAAC,mBAAmB,GAAG,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC;;;IAGpD,IAAI,QAAQ,CAAC,mBAAmB,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,WAAW,EAAE,QAAQ,CAAC,SAAS,CAAC,CAAC;IACxF,IAAI,QAAQ,CAAC,iBAAiB,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,EAAE,QAAQ,CAAC,OAAO,CAAC,CAAC;IAClF,OAAO,CAAC,sBAAsB,CAAC,gBAAgB,EAAE,QAAQ,EAAE,CAAC,IAAI,EAAE,KAAK;MACrE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;KAC7D,CAAC;;;IAGF,OAAO,QAAQ,CAAC;GACjB;;EAED,OAAO,MAAM,CAAC,KAAK,EAAE,MAAM,EAAE;IAC3B,OAAO,KAAK,CAAC,MAAM,CAAC,OAAO,KAAK,MAAM,CAAC,MAAM,CAAC,OAAO,IAAI,KAAK,CAAC,OAAO,KAAK,MAAM,CAAC,OAAO,CAAC;GAC3F;;EAED,OAAO,sBAAsB,CAAC,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE;IACvD,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,KAAK,KAAK;MAC1B,IAAI,QAAQ,CAAC,0BAA0B,CAAC,KAAK,CAAC,EAAE,QAAQ,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;KACpE,CAAC,CAAC;GACJ;CACF;;ACpGD,MAAM,IAAI,CAAC;EACT,WAAW,GAAG;IACZ,IAAI,CAAC,KAAK,EAAE,CAAC;GACd;;;;;;;;EAQD,cAAc,CAAC,QAAQ,GAAG,OAAO,EAAE,cAAc,GAAG,gCAAgC,EAAE;IACpF,IAAI,CAAC,kBAAkB,GAAG,QAAQ,IAAI,IAAI,CAAC,kBAAkB,CAAC;IAC9D,IAAI,CAAC,wBAAwB,GAAG,cAAc,IAAI,IAAI,CAAC,wBAAwB,CAAC;IAChF,OAAO,IAAI,CAAC;GACb;;;;;;;;;;;EAWD,SAAS,CAAC,QAAQ,EAAE,OAAO,EAAE,gBAAgB,GAAG,EAAE,EAAE;IAClD,IAAI,CAAC,QAAQ,EAAE,MAAM,IAAI,KAAK,CAAC,4BAA4B,CAAC,CAAC;IAC7D,IAAI,CAAC,OAAO,EAAE,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;IAC3D,IAAI,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,IAAI,CAAC,yCAAyC,CAAC,CAAC;IAC1E,MAAM,YAAY,GAAG,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IACzC,IAAI,UAAU,CAAC;IACf,YAAY,CAAC,OAAO,CAAC,CAAC,OAAO,KAAK;MAChC,UAAU,GAAG,IAAI,OAAO,CAAC,OAAO,EAAE,OAAO,EAAE,gBAAgB,CAAC,CAAC;MAC7D,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,cAAc,KAAK,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,UAAU,CAAC,CAAC,EAAE;QACvF,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;OAChC;KACF,CAAC,CAAC;IACH,OAAO,IAAI,CAAC;GACb;;;;;;EAMD,EAAE,GAAG;IACH,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,KAAK;MAC9B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;;MAEpB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,OAAO,KAAK,OAAO,CAAC,eAAe,EAAE,CAAC,CAAC;;MAE9D,SAAS,CAAC,MAAM;QACd,MAAM,kBAAkB,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,OAAO;UACnD,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,wBAAwB,CAAC;SACrE,CAAC;QACF,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,IAAI,CAAC,MAAM;UACzC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;UACrB,IAAI,CAAC,KAAK,EAAE,CAAC;UACb,OAAO,EAAE,CAAC;SACX,CAAC,CAAC;OACJ,CAAC,CAAC;KACJ,CAAC,CAAC;GACJ;;;;;;EAMD,KAAK,GAAG;IACN,IAAI,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,IAAI,CAAC,mCAAmC,CAAC,CAAC;IACpE,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACnB,IAAI,CAAC,cAAc,EAAE,CAAC;IACtB,OAAO,IAAI,CAAC;GACb;CACF;;;;"}